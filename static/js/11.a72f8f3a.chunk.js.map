{"version":3,"sources":["p3/Data/data.js","p3/component/DrumComponent.js","p3/app.js"],"names":["Sounds","keyCode","keyTrigger","id","url","secondSounds","DrumPud","props","handleKeyPress","event","PlaySound","bind","window","addEventListener","this","removeEventListener","document","getElementById","classList","add","power","audioEl","label","currentTime","innerText","console","log","volume","volumelevel","play","type","onClick","className","src","React","Component","DrumSound","soundPad","map","drum","name","DrumAdjecement","handleSound","handleVolume","handlePower","state","display","volumeLevel","setState","setTimeout","clearDisplay","a","target","value","htmlFor","onChange","Math","round","style","padding","DrumMachine"],"mappings":"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","file":"static/js/11.a72f8f3a.chunk.js","sourcesContent":["\r\n\r\nexport const Sounds =[\r\n      {\r\n    keyCode: 81,\r\n    keyTrigger: 'Q',\r\n    id: 'Heater-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\r\n  },\r\n  {\r\n    keyCode: 87,\r\n    keyTrigger: 'W',\r\n    id: 'Heater-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\r\n  },\r\n  {\r\n    keyCode: 69,\r\n    keyTrigger: 'E',\r\n    id: 'Heater-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\r\n  },\r\n  {\r\n    keyCode: 65,\r\n    keyTrigger: 'A',\r\n    id: 'Heater-4',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\r\n  },\r\n  {\r\n    keyCode: 83,\r\n    keyTrigger: 'S',\r\n    id: 'Clap',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\r\n  },\r\n  {\r\n    keyCode: 68,\r\n    keyTrigger: 'D',\r\n    id: 'Open-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\r\n  },\r\n  {\r\n    keyCode: 90,\r\n    keyTrigger: 'Z',\r\n    id: \"Kick-n'-Hat\",\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\r\n  },\r\n  {\r\n    keyCode: 88,\r\n    keyTrigger: 'X',\r\n    id: 'Kick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\r\n  },\r\n  {\r\n    keyCode: 67,\r\n    keyTrigger: 'C',\r\n    id: 'Closed-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\r\n  }\r\n];\r\n\r\n\r\nexport const secondSounds = [\r\n  {\r\n    keyCode: 81,\r\n    keyTrigger: 'Q',\r\n    id: 'Chord-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',\r\n  },\r\n  {\r\n    keyCode: 87,\r\n    keyTrigger: 'W',\r\n    id: 'Chord-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3',\r\n  },\r\n  {\r\n    keyCode: 69,\r\n    keyTrigger: 'E',\r\n    id: 'Chord-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3',\r\n  },\r\n  {\r\n    keyCode: 65,\r\n    keyTrigger: 'A',\r\n    id: 'Shaker',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3',\r\n  },\r\n  {\r\n    keyCode: 83,\r\n    keyTrigger: 'S',\r\n    id: 'Open-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3',\r\n  },\r\n  {\r\n    keyCode: 68,\r\n    keyTrigger: 'D',\r\n    id: 'Closed-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3',\r\n  },\r\n  {\r\n    keyCode: 90,\r\n    keyTrigger: 'Z',\r\n    id: 'Punchy-Kick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3',\r\n  },\r\n  {\r\n    keyCode: 88,\r\n    keyTrigger: 'X',\r\n    id: 'Side-Stick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3',\r\n  },\r\n  {\r\n    keyCode: 67,\r\n    keyTrigger: 'C',\r\n    id: 'Snare',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3',\r\n  },\r\n]\r\n    \r\n","import { auto } from '@popperjs/core'\r\nimport React from 'react'\r\nimport '../../style/p3/drum.scss';\r\nimport {Sounds,secondSounds} from '../Data/data';\r\n\r\nclass DrumPud extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n      this.PlaySound =  this.PlaySound.bind(this);\r\n     \r\n     \r\n    }\r\n\r\n\r\n    handleKeyPress = (event)=>{\r\n     \r\n      const {keyCode} = this.props\r\n      if(event.keyCode === keyCode){\r\n        this.PlaySound()\r\n      }\r\n    \r\n    }\r\n\r\n   componentDidMount() {\r\n     \r\n       window.addEventListener('keydown', this.handleKeyPress)\r\n       \r\n      }\r\n\r\n   //componentWillUnmount() is invoked immediately before a component is unmounted and destroyed. Perform any necessary cleanup in this method,\r\n   // such as invalidating timers, canceling network requests, or cleaning up any DOM elements that were created in componentDidMount\r\n    componentWillUnmount(){\r\n       window.removeEventListener('keydown', this.handleKeyPress)\r\n\r\n    }\r\n\r\n   PlaySound(){\r\n      let id =  document.getElementById(this.props.id) ;\r\n         id.classList.add('white')\r\n        //console.log( 'First', Sounds=== Sounds ||  'Second', secondSounds===secondSounds)\r\n         if(this.props.power){\r\n          let  audioEl = document.getElementById(this.props.keyTrigger);\r\n          let label= document.getElementById('label');\r\n          audioEl.currentTime = 0\r\n          label.innerText = this.props.id\r\n          console.log(label); \r\n            audioEl.volume =this.props.volumelevel ;\r\n            audioEl.play()\r\n         }\r\n    \r\n    }\r\n\r\n    \r\n\r\n \r\n    render(){\r\n        const {id,  keyTrigger,keyCode,url, power, volumelevel} =  this.props\r\n        return(\r\n         \r\n            <button id={id}  type='button' onClick={ this.PlaySound} className={'drum-pad  btn-music'}>\r\n                <span>{keyTrigger}</span> \r\n                <audio className={'clip'} id={keyTrigger} src={url}/>\r\n            </button>  \r\n      \r\n        ) \r\n    }\r\n}\r\n//fcuntion sumarray\r\nexport default DrumPud","import { react } from '@babel/types';\r\nimport React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\nimport DrumPud from '../p3/component/DrumComponent';\r\nimport {Sounds , secondSounds} from './Data/data';\r\n\r\n\r\n\r\n\r\n\r\nclass DrumSound extends React.Component{\r\n \r\n   render(){\r\n    const {soundPad,volumelevel, power} = this.props  // decide which sound pad play , soundPad props pass as props component\r\n    //  inside new component \r\n    return(\r\n    <div className={'drum'}>       \r\n     {soundPad.map(drum =>( // map throuh data and decide which pad play on depends on drum State      \r\n           <DrumPud \r\n           id={drum.id} \r\n           key={drum.id} \r\n           name={drum.name} \r\n           url={drum.url} \r\n           keyTrigger={drum.keyTrigger}// keyTrigger is Props , => drum keyTrigger state from Soubds\r\n           keyCode={drum.keyCode}\r\n           power={power}\r\n           volumelevel={volumelevel}\r\n           /> \r\n      ))}\r\n    </div>\r\n  )}\r\n}\r\n\r\nclass DrumAdjecement extends React.Component{\r\n    constructor(props){\r\n     super(props)\r\n\r\n     this.handleSound = this.handleSound.bind(this);\r\n     this.handleVolume = this.handleVolume.bind(this);\r\n     this.handlePower =  this.handlePower.bind(this);\r\n     this.state = {\r\n       display:'',\r\n       power:true,\r\n       drum:Sounds,\r\n       volumeLevel:1.0,\r\n     }\r\n }\r\n \r\n  handlePower(){\r\n    console.log('work , power')\r\n    this.setState({power:!this.state.power})\r\n  }\r\n \r\n  handleSound(){\r\n    if(this.state.drum=== Sounds){\r\n      this.setState({drum:secondSounds})\r\n    }else{\r\n      this.setState({drum:Sounds})\r\n    }\r\n    setTimeout(()=> this.clearDisplay(),300)\r\n  }\r\n\r\n\r\n  handleVolume(event){\r\n     let a = event.target.value / 100\r\n    \r\n     this.setState({volumeLevel:a,display:'vloume '+ a })\r\n     console.log(this.state.volume)\r\n     setTimeout(()=> this.clearDisplay(),1000)\r\n   }\r\n\r\n\r\n\r\n  clearDisplay(){\r\n        this.setState({display:''})\r\n  }\r\n  render(){  \r\n     const {drum,  power, volumeLevel} =  this.state\r\n\r\n     return(\r\n     <div className={'drum-section'}>\r\n      <h1 className='project'>Drum Machine</h1>\r\n       <DrumSound \r\n        power={power}\r\n        soundPad={drum} \r\n        volumelevel={volumeLevel}\r\n        /> {/* state  current spundPad*/}\r\n       <div className={'drum-section__control'}>\r\n            <span className={'header'}>On/Of</span>\r\n           <div className={\"toggle-container\"}>\r\n            <input type=\"checkbox\" id=\"switch1\" name=\"theme\" onClick={this.handlePower}/><label htmlFor=\"switch1\">Power</label>\r\n        </div>\r\n         <div >\r\n            <p id='label'></p><span>{this.state.display}</span>\r\n         </div>\r\n         <div>\r\n         <input\r\n          className={\"range\"}\r\n          type='range'\r\n         id='volumeSlider'\r\n         onChange={this.handleVolume}\r\n         value={Math.round(volumeLevel * 100)}\r\n         />\r\n         </div>\r\n         <span className={'header'}>Switch</span>\r\n         <div style={{display:'block',padding:'12px 12px'}} className={\"toggle-container\"}>\r\n            <input type=\"checkbox\" id=\"switch\" name=\"theme\" onClick={this.handleSound}/><label htmlFor=\"switch\">Toggle</label>\r\n        </div>\r\n\r\n       </div>\r\n       </div>\r\n     \r\n     )\r\n }\r\n\r\n}\r\n\r\nclass DrumMachine extends React.Component{\r\n\r\n\r\n  render(){\r\n    return(\r\n      <section  id='drum-machine'>\r\n        <div id='display'>\r\n         < DrumAdjecement/>\r\n         </div>\r\n      </section>\r\n    \r\n    )\r\n  }\r\n \r\n}\r\n\r\n\r\nexport default DrumMachine"],"sourceRoot":""}