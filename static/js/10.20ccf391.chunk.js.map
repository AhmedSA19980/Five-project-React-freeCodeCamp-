{"version":3,"sources":["p2/MarkDown.js"],"names":["marked","require","MarkDown","state","Mark","handleChange","bind","event","value","target","this","setState","className","id","onChange","dangerouslySetInnerHTML","__html","React","Component"],"mappings":"iNAEIA,EAASC,EAAQ,IAIfC,E,kDAEF,aAAc,IAAD,8BACT,gBACKC,MAAM,CACPC,KAAK,+nCA8CT,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAjDX,E,gDAoDb,SAAaC,GACT,IAAMC,EAAQD,EAAME,OAAOD,MAC3BE,KAAKC,SAAS,CAACP,KAAKI,M,oBAExB,WACI,OACI,8BACI,sBAAKI,UAAW,OAAhB,UACE,qBAAKA,UAAW,eAAhB,SACE,0BAAWC,GAAG,SACdL,MAAOE,KAAKP,MAAMC,KAClBU,SAAUJ,KAAKL,iBAInB,qBAAKQ,GAAG,UACPD,UAAW,gBACRG,wBAAyB,CACzBC,OAAQhB,EAAOU,KAAKP,MAAMC,kB,GAxEvBa,IAAMC,WAmFdhB,a","file":"static/js/10.20ccf391.chunk.js","sourcesContent":["import React from\"react\";\r\nimport '.././style/p2/editor.scss'\r\nlet marked = require(\"marked\");\r\n\r\n\r\n\r\nclass MarkDown extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            Mark: `\r\n            \r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.org), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbered lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\r\n\r\n`,\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        const value = event.target.value\r\n        this.setState({Mark:value})\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className={'main'}>\r\n                  <div className={'main__editor'}>\r\n                    <textarea  id='editor'\r\n                    value={this.state.Mark}\r\n                    onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                    \r\n                <div id=\"preview\"\r\n                 className={'main__preview'}\r\n                    dangerouslySetInnerHTML={{\r\n                    __html: marked(this.state.Mark),\r\n                    }}\r\n                    >\r\n                </div>\r\n            </div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default MarkDown"],"sourceRoot":""}